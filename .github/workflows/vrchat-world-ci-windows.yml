name: Build & Upload VRChat World (Windows Self-Hosted)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - .github/workflows/build-cache.yml
      - .github/workflows/build-cache-new.yml
      - .github/workflows/cache-unity.yml
      - .github/workspace-scripts/
      - .github/workflows/vrchat-world-ci.yml
      - .github/workflows/vrchat-world-ci-macos.yml
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-and-upload-nightly-world-windows:
    runs-on: [self-hosted, pc]
    timeout-minutes: 30
    env:
      workspace-path: "${{ github.workspace }}"
      source-path: "${{ github.workspace }}"
      release-path: "${{ github.workspace }}/tmp/release"
      add-packages-script-path: "${{ github.workspace }}/.github/workflow-scripts/add-user-package-to-vrc-get.js"
      get-serial-script-path: "${{ github.workspace }}/.github/workflow-scripts/get-serial-from-license-file.js"
      UNITY_PATH: "C:\\Program Files\\Unity\\Hub\\Editor\\2022.3.22f1\\Editor\\Unity.exe"
      UNITY_SERIAL: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Release Package
        uses: robinraju/release-downloader@a96f54c1b5f5e09e47d9504526e96febd949d4c2
        if: github.event_name == 'release'
        with:
          latest: true
          preRelease: false
          out-file-path: ${{ env.release-path }}
          fileName: "*.zip"
          extract: true

      - name: Setup vrc-get
        uses: anatawa12/sh-actions/setup-vrc-get@master

      - name: Add Release Pacakge to vrc-get
        if: github.event_name == 'release'
        run: "node ${{ env.add-packages-script-path }} ${{ env.release-path }}"

      - name: Add VPM Repositories
        run: |
          yes | vrc-get repo import repositories.txt
          vrc-get repo list

      - name: Resolve VPM Dependencies
        working-directory: ${{ env.workspace-path }}
        run: "vrc-get resolve"
      
      - name: Remove Unsupported Packages
        working-directory: ${{ env.workspace-path }}
        shell: pwsh
        run: |
          $ErrorActionPreference = "SilentlyContinue"
          vrc-get remove dev.foxscore.easy-login au.benjithatfoxguy.templates.world.2022.3.22f1.updater com.nidonocu.vrcunitytoolbar au.benjithatfoxguy.batchimportunitypackage au.benjithatfoxguy.restartunity dev.hai-vr.resilience.let-me-see dev.hai-vr.resilience.toolkit unity-editor-dark-mode -y
          vrc-get remove numeira.auto-certify-copyright-agreement -y

      - name: Add AutoBuild Packages to Workspace
        working-directory: ${{ env.workspace-path }}
        shell: pwsh
        run: |
          $ErrorActionPreference = "SilentlyContinue"
          vrc-get install com.yuxiaviation.vrchat.autobuild.world -y

      - name: Downgrade VRCSDK to 3.7.1
        working-directory: ${{ env.workspace-path }}
        run: |
          vrc-get remove com.vrchat.worlds com.vrchat.base -y
          vrc-get install com.vrchat.worlds 3.7.1 -y
          vrc-get install com.vrchat.base 3.7.1 -y

      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: ${{ env.workspace-path }}/Library
          key: Library-Build-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Build-

      - name: Build & Upload VRChat World
        shell: pwsh
        run: |
          & "$env:UNITY_PATH" -nographics -projectPath "${{ env.workspace-path }}" -username "${{ secrets.UNITY_EMAIL }}" -password "${{ secrets.UNITY_PASSWORD }}" -serial "${{ env.UNITY_SERIAL }}" -batchmode -logFile - -buildTarget Win64 -executeMethod VRChatAerospaceUniversity.VRChatAutoBuild.Worlds.AutoBuildVRChatWorld.BuildAndUploadWorld
        env:
          VRC_AUTO_BUILD_CONTENT_ID: ${{ secrets.NIGHTLY_WORLD_CONTENT_ID }}
          VRC_AUTO_BUILD_SCENE_PATH: Assets/Scenes/VRCDefaultWorldScene.unity
          VRC_AUTO_BUILD_USERNAME: ${{ secrets.VRC_AUTO_BUILD_USERNAME }}
          VRC_AUTO_BUILD_PASSWORD: ${{ secrets.VRC_AUTO_BUILD_PASSWORD }}
          VRC_AUTO_BUILD_TOTP_KEY: ${{ secrets.VRC_AUTO_BUILD_TOTP_KEY }}
          VRC_AUTO_BUILD_AUTH_COOKIE: ${{ secrets.VRC_AUTO_BUILD_AUTH_COOKIE }}
          VRC_AUTO_BUILD_TWO_FACTOR_AUTH_COOKIE: ${{ secrets.VRC_AUTO_BUILD_TWO_FACTOR_AUTH_COOKIE }}
