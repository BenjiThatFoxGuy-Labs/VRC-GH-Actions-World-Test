name: Build VRChat World Cache

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/build-cache-new.yml'
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-cache-unity-project:
    runs-on: windows-latest

    env:
      workspace-path: "${{ github.workspace }}"
      source-path: "${{ github.workspace }}"
      release-path: "${{ github.workspace }}/tmp/release"
      add-packages-script-path: "${{ github.workspace }}/.github/workflow-scripts/add-user-package-to-vrc-get.js"
      get-serial-script-path: "${{ github.workspace }}/.github/workflow-scripts/get-serial-from-license-file.js"
      UNITY_SERIAL: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
      UNITY_NO_SANDBOX: true
      UNITY_VERSION: 2022.3.22f1
      UNITY_DOWNLOAD_HASH: 887be4894c44
      UNITY_INSTALL_DIR: /opt/unity

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Download Release Package
        uses: robinraju/release-downloader@a96f54c1b5f5e09e47d9504526e96febd949d4c2
        if: github.event_name == 'release'
        with:
          latest: true
          preRelease: false
          out-file-path: ${{ env.release-path }}
          fileName: "*.zip"
          extract: true

      - name: Setup vrc-get
        id: setup-vrc-get
        uses: anatawa12/sh-actions/setup-vrc-get@master

      - name: Cache FUSE
        if: runner.os == 'Linux'
        id: cache-fuse
        uses: actions/cache@v4
        with:
          path: |
            /usr/bin/fusermount
            /usr/lib/x86_64-linux-gnu/libfuse*
            /etc/fuse.conf
          key: fuse-install-${{ runner.os }}

      - name: Setup FUSE and xvfb
        if: runner.os == 'Linux' && steps.cache-fuse.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y fuse libfuse2 xvfb x11-xserver-utils
          sudo modprobe fuse
          sudo groupadd fuse || true
          sudo usermod -a -G fuse $USER || true
          # Setup Chrome sandbox for Unity Hub
          sudo chown root:root /tmp
          sudo chmod 1777 /tmp

      - name: Configure FUSE
        if: runner.os == 'Linux' && steps.cache-fuse.outputs.cache-hit == 'true'
        run: |
          sudo apt-get install -y xvfb x11-xserver-utils
          sudo modprobe fuse
          sudo groupadd fuse || true
          sudo usermod -a -G fuse $USER || true
          # Setup Chrome sandbox for Unity Hub
          sudo chown root:root /tmp
          sudo chmod 1777 /tmp

      - name: Cache Unity Editor
        if: runner.os == 'Windows'
        id: cache-unity
        uses: actions/cache@v4
        with:
          path: C:\Program Files\Unity\
          key: unity-editor-${{ runner.os }}-2022.3.22f1-${{ hashFiles('ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            unity-editor-${{ runner.os }}-2022.3.22f1-
            unity-editor-${{ runner.os }}-

      - name: Setup Unity
        if: steps.cache-unity.outputs.cache-hit != 'true'
        uses: kuler90/setup-unity@v1
        with:
          unity-modules: ${{ runner.os == 'Windows' && 'windows-il2cpp' || 'linux-il2cpp' }}
          unity-version: 2022.3.22f1

      - name: Install Unity on Linux
        if: runner.os == 'Linux'
        run: |
          sudo mkdir -p ${{ env.UNITY_INSTALL_DIR }}
          sudo chmod 777 ${{ env.UNITY_INSTALL_DIR }}
          wget -O /tmp/UnitySetup "https://download.unity3d.com/download_unity/${{ env.UNITY_DOWNLOAD_HASH }}/UnitySetup-${{ env.UNITY_VERSION }}"
          chmod +x /tmp/UnitySetup
          yes | /tmp/UnitySetup --unattended --install-location=${{ env.UNITY_INSTALL_DIR }} --components=Unity,Linux-IL2CPP
          sudo chmod -R a+rx ${{ env.UNITY_INSTALL_DIR }}/Editor/Unity

      - name: Add Release Pacakge to vrc-get
        if: github.event_name == 'release'
        run: "node ${{ env.add-packages-script-path }} ${{ env.release-path }}"

      - name: Add VPM Repositories
        run: |
          vrc-get repo add https://adjerry91.github.io/VRCFaceTracking-Templates/index.json
          vrc-get repo add https://api.vrlabs.dev/listings/category/Components
          vrc-get repo add https://api.vrlabs.dev/listings/category/Dependencies
          vrc-get repo add https://api.vrlabs.dev/listings/category/Essentials
          vrc-get repo add https://api.vrlabs.dev/listings/category/Systems
          vrc-get repo add https://codec-xyz.github.io/photo_frame_manager/index.json
          vrc-get repo add https://drblackrat.github.io/vpm-listing/index.json
          vrc-get repo add https://enitimeago.github.io/vpm-repos/index.json
          vrc-get repo add https://esperecyan.github.io/VRMConverterForVRChat/registry.json
          vrc-get repo add https://furality.github.io/vcc-packages/index.json
          vrc-get repo add https://github.com/Krysiek/CuteDancer/raw/vpm/CuteDancer.json
          vrc-get repo add https://hai-vr.github.io/vpm-listing/index.json
          vrc-get repo add https://kemocade.github.io/Kemocade.Vrc.Data.Extensions/index.json
          vrc-get repo add https://krysiek.github.io/CuteDancer/index.json
          vrc-get repo add https://kurone-kito.github.io/vpm/index.json
          vrc-get repo add https://kurotu.github.io/vpm-repos/vpm.json
          vrc-get repo add https://labthe3rd.github.io/PZCameraSystem/index.json
          vrc-get repo add https://lilxyzw.github.io/vpm-repos/vpm.json
          vrc-get repo add https://magmamcnet.github.io/VPM/index.json
          vrc-get repo add https://mmmaellon.github.io/MMMaellonVCCListing/index.json
          vrc-get repo add https://orels1.github.io/orels-Unity-Shaders/index.json
          vrc-get repo add https://poiyomi.github.io/vpm/index.json
          vrc-get repo add https://pokeyi.dev/vpm-packages/index.json
          vrc-get repo add https://repo.buddyworks.wtf/index.json
          vrc-get repo add https://spokeek.github.io/vpm-repository/index.json
          vrc-get repo add https://suzuryg.github.io/vpm-repos/vpm.json
          vrc-get repo add https://vcc.pawlygon.net/index.json
          vrc-get repo add https://vcc.vrcfury.com/
          vrc-get repo add https://vpm.anatawa12.com/vpm.json
          vrc-get repo add https://vpm.benjifox.gay/index.json
          vrc-get repo add https://vpm.dreadscripts.com/listings/main.json
          vrc-get repo add https://vpm.nadena.dev/vpm.json
          vrc-get repo add https://vpm.pimaker.at/index.json
          vrc-get repo add https://vpm.techanon.dev/index.json
          vrc-get repo add https://vpm.thry.dev/index.json
          vrc-get repo add https://wholesomevr.github.io/SPS-Configurator/index.json
          vrc-get repo add https://i5ucc.github.io/vpm/main.json
          vrc-get repo add https://pandrabox.github.io/vpm/index.json
          vrc-get repo add https://kb10uy.github.io/vrc-repository/index.json
          vrc-get repo add https://tr1turbo.github.io/BlendShare/index.json
          vrc-get repo add https://waya0125.com/vpm
          vrc-get repo add https://foxscore.dev/vpm/index.json
          vrc-get repo add https://tliks.github.io/vpm-repos/index.json
          vrc-get repo add https://www.matthewherber.com/Happys-VRC-tools/index.json
          vrc-get repo add https://d4rkc0d3r.github.io/vpm-repos/main.json
          vrc-get repo add https://vpm.narazaka.net/index.json
          vrc-get repo add https://xtlcdn.github.io/vpm/index.json
          vrc-get repo add https://vpm.bluwizard.net/index.json
          vrc-get repo add https://aurycat.github.io/vpm/index.json
          vrc-get repo add https://lastationvrchat.github.io/Lastation-Package-Listing/index.json
          vrc-get repo add https://vpm.ureishi.net/repos.json
          vrc-get repo add https://vpm.vrsl.dev/index.json
          vrc-get repo add https://nidonocu.github.io/virtual-gryphon-packages/index.json
          vrc-get repo add https://z3y.github.io/vpm-package-listing/index.json
          vrc-get repo add https://page.853lab.com/vpm-repos/vpm.json
          vrc-get repo add https://hoyotoon.github.io/vpm/index.json
          vrc-get repo add https://tmyt.github.io/vpm/index.json
          vrc-get repo add https://rerigferl.github.io/vpm/vpm.json
          vrc-get repo add https://vrctxl.github.io/VPM/index.json
          vrc-get repo add https://guribo.github.io/TLP/index.json
          vrc-get repo add https://cyanlaser.github.io/CyanPlayerObjectPool/index.json
          vrc-get repo add https://reava.github.io/VPM-Listings/index.json
          vrc-get repo add https://vavassor.github.io/OrchidSealVPM/index.json
          vrc-get repo add https://virtualvisions.github.io/VPM-Packages/index.json
          vrc-get repo add https://vpm.gyoku.tech/vpm.json
          vrc-get repo add https://pkg-index.yuxiaviation.com/
          vrc-get repo add https://orels1.github.io/UdonToolkit/index.json
          vrc-get repo add https://vrcd-community.github.io/vpm-packages/index.json
          vrc-get repo list

      - name: Resolve VPM Dependencies
        working-directory: ${{ env.workspace-path }}
        run: "vrc-get resolve"
      
      - name: Remove Unsupported Packages (Windows)
        if: runner.os == 'Windows'
        working-directory: ${{ env.workspace-path }}
        shell: pwsh
        run: |
          $ErrorActionPreference = "SilentlyContinue"
          vrc-get remove dev.foxscore.easy-login -y || true
          vrc-get remove au.benjithatfoxguy.templates.world.2022.3.22f1.updater -y || true
          vrc-get remove com.nidonocu.vrcunitytoolbar -y || true
          vrc-get remove au.benjithatfoxguy.batchimportunitypackage -y || true
          vrc-get remove au.benjithatfoxguy.restartunity -y || true
          vrc-get remove dev.hai-vr.resilience.let-me-see -y || true
          vrc-get remove dev.hai-vr.resilience.toolkit -y || true
          vrc-get remove unity-editor-dark-mode -y || true

      - name: Remove Unsupported Packages (Non-Windows)
        if: runner.os != 'Windows'
        working-directory: ${{ env.workspace-path }}
        shell: bash
        run: |
          vrc-get remove dev.foxscore.easy-login -y || true
          vrc-get remove au.benjithatfoxguy.templates.world.2022.3.22f1.updater -y || true
          vrc-get remove com.nidonocu.vrcunitytoolbar -y || true
          vrc-get remove au.benjithatfoxguy.batchimportunitypackage -y || true
          vrc-get remove au.benjithatfoxguy.restartunity -y || true
          vrc-get remove dev.hai-vr.resilience.let-me-see -y || true
          vrc-get remove dev.hai-vr.resilience.toolkit -y || true
          vrc-get remove unity-editor-dark-mode -y || true
          rm -rf Assets/Editor || true
          rm -rf Assets/Editor.meta || true
          rm -rf Assets/UERP || true
          rm -rf Assets/UERP.meta || true

      - name: Add AutoBuild Packages to Workspace (Windows)
        if: runner.os == 'Windows'
        working-directory: ${{ env.workspace-path }}
        shell: pwsh
        run: |
          $ErrorActionPreference = "SilentlyContinue"
          vrc-get install com.yuxiaviation.vrchat.autobuild.world -y

      - name: Add AutoBuild Packages to Workspace (Non-Windows)
        if: runner.os != 'Windows'
        working-directory: ${{ env.workspace-path }}
        shell: bash
        run: |
          vrc-get install com.yuxiaviation.vrchat.autobuild.world -y || true

      - name: Add Patcher Package to fix SDK Build on Linux
        if: runner.os == 'Linux'
        working-directory: ${{ env.workspace-path }}
        run: vrc-get install cn.org.vrcd.vpm.vrchat-sdk-patcher.worlds -y || true

      # - name: Downgrade VRCSDK to 3.7.1
      #   working-directory: ${{ env.workspace-path }}
      #   run: |
      #     vrc-get remove com.vrchat.worlds -y
      #     vrc-get remove com.vrchat.base -y
      #     vrc-get install com.vrchat.worlds 3.7.1 -y
      #     vrc-get install com.vrchat.base 3.7.1 -y

      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: ${{ env.workspace-path }}/Library
          key: Library-Build-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Build-

      # - name: Get Unity Serial
      #   if: runner.os == 'Linux'
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #   run: |
      #     UNITY_SERIAL="$(echo $UNITY_LICENSE | node ${{ env.get-serial-script-path }})"
      #     echo "::add-mask::$UNITY_SERIAL"
      #     echo "UNITY_SERIAL=$UNITY_SERIAL" >> $GITHUB_ENV

      # - name: Get Unity Serial
      #   if: runner.os == 'Windows'
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #   shell: pwsh
      #   run: |
      #     $UNITY_SERIAL = (echo $env:UNITY_LICENSE | node ${{ env.get-serial-script-path }})
      #     Write-Host "::add-mask::$UNITY_SERIAL"
      #     Write-Host "UNITY_SERIAL=$UNITY_SERIAL" >> $env:GITHUB_ENV

      - name: Build & Upload VRChat World
        if: runner.os == 'Linux'
        shell: bash
        run: |
          UNITY_EXE="${{ env.UNITY_PATH }}/Unity"
          chmod +x "$UNITY_EXE"
          # Run Unity with xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          
          "$UNITY_EXE" -projectPath "${{ env.workspace-path }}" \
            -username "${{ secrets.UNITY_EMAIL }}" \
            -password "${{ secrets.UNITY_PASSWORD }}" \
            -serial "${{ secrets.UNITY_SERIAL }}" \
            -batchmode -logFile - \
            -buildTarget Win64 \
            -disableAssemblyUpdater \
            -quit
        env:
          VRC_AUTO_BUILD_CONTENT_ID: ${{ secrets.NIGHTLY_WORLD_CONTENT_ID }}
          VRC_AUTO_BUILD_SCENE_PATH: Assets\Scenes\VRCDefaultWorldScene.unity
          VRC_AUTO_BUILD_USERNAME: ${{ secrets.VRC_AUTO_BUILD_USERNAME }}
          VRC_AUTO_BUILD_PASSWORD: ${{ secrets.VRC_AUTO_BUILD_PASSWORD }}
          VRC_AUTO_BUILD_TOTP_KEY: ${{ secrets.VRC_AUTO_BUILD_TOTP_KEY }}
          VRC_AUTO_BUILD_AUTH_COOKIE: ${{ secrets.VRC_AUTO_BUILD_AUTH_COOKIE }}
          VRC_AUTO_BUILD_TWO_FACTOR_AUTH_COOKIE: ${{ secrets.VRC_AUTO_BUILD_TWO_FACTOR_AUTH_COOKIE }}

      - name: Build & Upload VRChat World
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          "${{ env.UNITY_PATH }}" `
            -projectPath "${{ env.workspace-path }}\${{ env.VRC_AUTO_BUILD_SCENE_PATH }}" `
            -username "${{ secrets.UNITY_EMAIL }}" `
            -password "${{ secrets.UNITY_PASSWORD }}" `
            -serial "${{ secrets.UNITY_SERIAL }}" `
            -batchmode -logFile - `
            -buildTarget Win64 `
            -disableAssemblyUpdater `
            -quit
        env:
          UNITY_PATH: "C:\\Program Files\\Unity\\Hub\\Editor\\2022.3.22f1\\Editor\\Unity.exe"
          VRC_AUTO_BUILD_CONTENT_ID: ${{ secrets.NIGHTLY_WORLD_CONTENT_ID }}
          VRC_AUTO_BUILD_SCENE_PATH: Assets\Scenes\VRCDefaultWorldScene.unity
          VRC_AUTO_BUILD_USERNAME: ${{ secrets.VRC_AUTO_BUILD_USERNAME }}
          VRC_AUTO_BUILD_PASSWORD: ${{ secrets.VRC_AUTO_BUILD_PASSWORD }}
          VRC_AUTO_BUILD_TOTP_KEY: ${{ secrets.VRC_AUTO_BUILD_TOTP_KEY }}
          VRC_AUTO_BUILD_AUTH_COOKIE: ${{ secrets.VRC_AUTO_BUILD_AUTH_COOKIE }}
          VRC_AUTO_BUILD_TWO_FACTOR_AUTH_COOKIE: ${{ secrets.VRC_AUTO_BUILD_TWO_FACTOR_AUTH_COOKIE }}